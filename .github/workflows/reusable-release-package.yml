name: Release package

on:
  workflow_call:
    inputs:
      # The GitHub App that has been given permission to push to repo.
      app-id:
        type: "string"
        required: true
    secrets:
      # Needs read and write contents permission to push to main.
      update-version-gh-token:
        required: true

jobs:
  update-version-and-changelog:
    if: "!startsWith(github.event.head_commit.message, 'build(version): ')"
    runs-on: ubuntu-latest
    name: "Update project's version and changelog"
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: app-token
        with:
          app-id: ${{ inputs.app-id }}
          private-key: ${{ secrets.update-version-gh-token }}

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # Only need the last commit from the repo.
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Set User
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - id: cz
        name: Update version and changelog
        uses: commitizen-tools/commitizen-action@5b0848cd060263e24602d1eba03710e056ef7711 # 0.24.0
        with:
          github_token: ${{ steps.app-token.outputs.token }}
          changelog: true

      - name: Create GitHub release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2.2.2
        with:
          generate_release_notes: true
          # env variable containing the new version, created by the Commitizen action
          tag_name : ${{ env.REVISION }}

  build:
    # This workflow and the publish workflows are based on:
    # - https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
    # - https://www.andrlik.org/dispatches/til-use-uv-for-build-and-publish-github-actions/
    # - https://github.com/astral-sh/trusted-publishing-examples
    name: Build Python üêç distribution üì¶
    runs-on: ubuntu-latest
    needs:
      - update-version-and-changelog
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@445689ea25e0de0a23313031f5fe577c74ae45a1 # v6.3.0
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Build
        # Builds dists from source and stores them in the dist/ directory.
        run: uv build

      - name: Upload Python package distributions
        # Uploads the built distributions so that they can be used in the next steps.
        # This is necessary because the next steps needs to run on different environments
        # (e.g. publish to TestPyPI and PyPI), and the dist/ directory is not persisted
        # between jobs.
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    runs-on: ubuntu-latest
    environment: testpypi
    needs:
      - build
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing.
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Set up uv
        uses: astral-sh/setup-uv@445689ea25e0de0a23313031f5fe577c74ae45a1
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Publish distribution üì¶ to TestPyPI
      # This requires an []
        run: uv publish --index testpypi --trusted-publishing always

  # publish-to-pypi:
  #   name: Publish Python üêç distribution üì¶ to PyPI
  #   # Only publish to PyPI on tag pushes.
  #   if: startsWith(github.ref, 'refs/tags/')
  #   needs:
  #   - build
  #   runs-on: ubuntu-latest
  #   environment: pypi
  #   permissions:
  #     id-token: write  # IMPORTANT: mandatory for trusted publishing
  #   steps:
  #       - name: Checkout
  #         uses: actions/checkout@v4

  #       - name: Download dists
  #         uses: actions/download-artifact@v4
  #         with:
  #           name: python-package-distributions
  #           path: dist/

  #       - name: Set up uv
  #         uses: astral-sh/setup-uv@445689ea25e0de0a23313031f5fe577c74ae45a1
  #         with:
  #           enable-cache: true
  #           cache-dependency-glob: "uv.lock"

  #       - name: Publish distribution üì¶ to PyPI
  #         run: uv publish --trusted-publishing always
